.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getRequiredInterfaces
.public	getRequiredInterfaces
.type	getRequiredInterfaces, @function
; Decode input parameters
ENDS
; function getRequiredInterfaces
;; ret param: interfaces
PUSHINT 0
NEWDICT
PAIR
;; return
PUSHINT 3
NEWDICT
PUSHINT 61327837143279038880828163389518064523935669597243029312953519799871119370467
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHINT 97666197394490832850025452340953760683932158038560248965965517035320729953595
NEWC
STU 256
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHINT 89404818724766375052640436733689818385443971675132469006618078523788168299521
NEWC
STU 256
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd8642d0a
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
; end function getRequiredInterfaces
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getRequiredInterfaces_internal
.type	getRequiredInterfaces_internal, @function
; function getRequiredInterfaces
;; ret param: interfaces
PUSHINT 0
NEWDICT
PAIR
;; return
PUSHINT 3
NEWDICT
PUSHINT 61327837143279038880828163389518064523935669597243029312953519799871119370467
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PUSHINT 97666197394490832850025452340953760683932158038560248965965517035320729953595
NEWC
STU 256
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PUSHINT 89404818724766375052640436733689818385443971675132469006618078523788168299521
NEWC
STU 256
PUSHINT 2
ROT
PUSHINT 32
DICTUSETB
PAIR
NIP
; end function getRequiredInterfaces

.globl	getInfo
.public	getInfo
.type	getInfo, @function
; Decode input parameters
ENDS
; function getInfo
;; ret param: name
NEWC
ENDC
;; ret param: version
NEWC
ENDC
;; ret param: publisher
NEWC
ENDC
;; ret param: key
NEWC
ENDC
;; ret param: author
NEWC
ENDC
;; ret param: support
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: hello
NEWC
ENDC
;; ret param: language
NEWC
ENDC
; expValue
; end expValue
PUSHSLICE x534f524465626f74
NEWC
STSLICE
ENDC
; colValue
POP S8
; end colValue
; expValue
; end expValue
PUSHSLICE x302e312e30
NEWC
STSLICE
ENDC
; colValue
POP S7
; end colValue
; expValue
; end expValue
PUSHSLICE x6c617567616e
NEWC
STSLICE
ENDC
; colValue
POP S6
; end colValue
; expValue
; end expValue
PUSHSLICE x4465426f7420666f72204c69717569534f5220444558
NEWC
STSLICE
ENDC
; colValue
POP S5
; end colValue
; expValue
; end expValue
PUSHSLICE x6c617567616e
NEWC
STSLICE
ENDC
; colValue
POP S4
; end colValue
; expValue
; end expValue
;; push identifier ZERO_ADDRESS
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; colValue
POP S3
; end colValue
; expValue
; end expValue
PUSHSLICE x57656c636f6d6520746f20534f524465626f742c2061204c69717569534f522044455820637573746f6d6572204465426f7421
NEWC
STSLICE
ENDC
; colValue
POP S2
; end colValue
; expValue
; end expValue
PUSHSLICE x656e
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
;; returning named params
;; emitting 8 value(s)
PUSH S8
EQINT -1
PUSHCONT {
	PUSH S10
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x9fede5dc
	PUSH S9
	STREFR
	PUSH S8
	STREFR
	PUSH S7
	STREFR
	NEWC
	PUSH S7
	STREFR
	PUSH S6
	STREFR
	PUSH S5
	STSLICER
	PUSH S4
	STREFR
	PUSH S3
	STREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 8
; end function getInfo
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getInfo_internal
.type	getInfo_internal, @function
; function getInfo
;; ret param: name
NEWC
ENDC
;; ret param: version
NEWC
ENDC
;; ret param: publisher
NEWC
ENDC
;; ret param: key
NEWC
ENDC
;; ret param: author
NEWC
ENDC
;; ret param: support
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: hello
NEWC
ENDC
;; ret param: language
NEWC
ENDC
; expValue
; end expValue
PUSHSLICE x534f524465626f74
NEWC
STSLICE
ENDC
; colValue
POP S8
; end colValue
; expValue
; end expValue
PUSHSLICE x302e312e30
NEWC
STSLICE
ENDC
; colValue
POP S7
; end colValue
; expValue
; end expValue
PUSHSLICE x6c617567616e
NEWC
STSLICE
ENDC
; colValue
POP S6
; end colValue
; expValue
; end expValue
PUSHSLICE x4465426f7420666f72204c69717569534f5220444558
NEWC
STSLICE
ENDC
; colValue
POP S5
; end colValue
; expValue
; end expValue
PUSHSLICE x6c617567616e
NEWC
STSLICE
ENDC
; colValue
POP S4
; end colValue
; expValue
; end expValue
;; push identifier ZERO_ADDRESS
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; colValue
POP S3
; end colValue
; expValue
; end expValue
PUSHSLICE x57656c636f6d6520746f20534f524465626f742c2061204c69717569534f522044455820637573746f6d6572204465426f7421
NEWC
STSLICE
ENDC
; colValue
POP S2
; end colValue
; expValue
; end expValue
PUSHSLICE x656e
NEWC
STSLICE
ENDC
; colValue
NIP
; end colValue
;; returning named params
; end function getInfo

.globl	getVersion
.public	getVersion
.type	getVersion, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
PUSHSLICE x534f524465626f74
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 1
PUSHINT 0
;; param: major
;; param: minor
;; param: fix
; function _version
;; return
;; push identifier major
PUSH S2
;; <<
PUSHINT 16
LSHIFT
UFITS 24
;; |
;; push identifier minor
PUSH S2
;; <<
PUSHINT 8
LSHIFT
UFITS 24
OR
;; |
;; push identifier fix
PUSH S1
OR
XCHG s3
BLKDROP 3
; end function _version
SWAP
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb541576f
	PUSH S2
	STREFR
	PUSH S1
	STUR 24
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP2
; end function getVersion
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getVersion_internal
.type	getVersion_internal, @function
; function getVersion
;; ret param: name
NEWC
ENDC
;; ret param: semver
PUSHINT 0
PUSHSLICE x534f524465626f74
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 1
PUSHINT 0
;; param: major
;; param: minor
;; param: fix
; function _version
;; return
;; push identifier major
PUSH S2
;; <<
PUSHINT 16
LSHIFT
UFITS 24
;; |
;; push identifier minor
PUSH S2
;; <<
PUSHINT 8
LSHIFT
UFITS 24
OR
;; |
;; push identifier fix
PUSH S1
OR
XCHG s3
BLKDROP 3
; end function _version
SWAP
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
NIP
; end colValue
;; returning named params
; end function getVersion

.globl	start
.public	start
.type	start, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function start
PUSHINT 0
PUSHSLICE x48656c6c6f21
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x57656c636f6d6520746f20534f524465626f742c2061204c69717569534f522044455820637573746f6d6572204465426f742e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x506c656173652c20737065636966792061205055424c4943206b6579206f6620796f75722077616c6c65742e2049742773206e656564656420746f207369676e20736f6d65204c69717569534f5220444558206f7065726174696f6e732e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x596f7572205449502d332077616c6c6574732077696c6c20616c736f206265207265676973746572656420666f722074686973206b65792e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x596f75722063616e20737769746368206265747765656e206b65797320696e20746865204d61696e204d656e752e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
CALL $mainMenu_internal$
; end function start
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	start_internal
.type	start_internal, @function
; function start
PUSHINT 0
PUSHSLICE x48656c6c6f21
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x57656c636f6d6520746f20534f524465626f742c2061204c69717569534f522044455820637573746f6d6572204465426f742e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x506c656173652c20737065636966792061205055424c4943206b6579206f6620796f75722077616c6c65742e2049742773206e656564656420746f207369676e20736f6d65204c69717569534f5220444558206f7065726174696f6e732e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x596f7572205449502d332077616c6c6574732077696c6c20616c736f206265207265676973746572656420666f722074686973206b65792e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
PUSHINT 0
PUSHSLICE x596f75722063616e20737769746368206265747765656e206b65797320696e20746865204d61696e204d656e752e
NEWC
STSLICE
ENDC
CALL $Terminal_no_obj_print$
CALL $mainMenu_internal$
; end function start

.globl	saveKey
.public	saveKey
.type	saveKey, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDREF
ENDS
;; param: value
; function saveKey
;; push identifier value
DUP
CALLREF {
	CALL $__stoi_macro$
}
SWAP
SWAP
;; decl: pubkey
;; decl: status
;; if
;; push identifier status
DUP
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier pubkey
	PUSH S1
	; colValue
	SETGLOB 14
	; end colValue
}
IF
;; end if
CALL $mainMenu_internal$
BLKDROP 3
; end function saveKey
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	saveKey_internal
.type	saveKey_internal, @function
;; param: value
; function saveKey
;; push identifier value
DUP
CALLREF {
	CALL $__stoi_macro$
}
SWAP
SWAP
;; decl: pubkey
;; decl: status
;; if
;; push identifier status
DUP
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier pubkey
	PUSH S1
	; colValue
	SETGLOB 14
	; end colValue
}
IF
;; end if
CALL $mainMenu_internal$
BLKDROP 3
; end function saveKey

.globl	saveRoot
.public	saveRoot
.type	saveRoot, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function saveRoot
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 15
; end colValue
CALL $mainMenu_internal$
DROP
; end function saveRoot
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	saveRoot_internal
.type	saveRoot_internal, @function
;; param: value
; function saveRoot
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 15
; end colValue
CALL $mainMenu_internal$
DROP
; end function saveRoot

.globl	mainMenu
.public	mainMenu
.type	mainMenu, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function mainMenu
; expValue
; end expValue
;; get member NONE
PUSHINT 0
; colValue
SETGLOB 17
; end colValue
;; if
;; push identifier userPubkey_
GETGLOB 14
EQINT 0
PUSHCONT {
	PUSHINT 722189255
	PUSHSLICE x456e74657220796f7572207075626c6963206b657920283078666666662e2e2e20666f726d6174293a20
	NEWC
	STSLICE
	ENDC
	FALSE
	CALL $Terminal_no_obj_input$
}
PUSHCONT {
	;; if
	;; push identifier userRoot_
	GETGLOB 15
	;; push identifier ZERO_ADDRESS
	;; address.makeAddrStd()
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SDEQ
	PUSHCONT {
		PUSHINT 1572833486
		PUSHSLICE x456e74657220746f6b656e20726f6f7420616464726573732028303a666666662e2e2e20666f726d6174293a20
		NEWC
		STSLICE
		ENDC
		CALL $AddressInput_no_obj_get$
	}
	PUSHCONT {
		;; if
		;; push identifier userWallet_
		GETGLOB 16
		;; push identifier ZERO_ADDRESS
		;; address.makeAddrStd()
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		SDEQ
		PUSHCONT {
			CALL $resolveWallet_internal$
		}
		PUSHCONT {
			PUSHINT 0
			PUSHSLICE x4d41494e204d454e55
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			NEWC
			NULL
			TUPLE 2
			NEWC
			PUSHSLICE x4b45593a203078
			CALLREF {
				CALL $storeStringInBuilders_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			;; push identifier userPubkey_
			GETGLOB 14
			PUSHINT 0
			FALSE
			TRUE
			FALSE
			CALLREF {
				CALL $convertIntToHexStr_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			CALLREF {
				CALL $assembleList_macro$
			}
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			NEWC
			NULL
			TUPLE 2
			NEWC
			PUSHSLICE x57414c4c45543a20303a
			CALLREF {
				CALL $storeStringInBuilders_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			;; get member value
			;; push identifier userWallet_
			GETGLOB 16
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			PUSHINT 0
			FALSE
			TRUE
			FALSE
			CALLREF {
				CALL $convertIntToHexStr_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			CALLREF {
				CALL $assembleList_macro$
			}
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x43686f6f736520616374696f6e2e2e2e
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3129202020205b436865636b2042616c616e63655d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3229202020205b4d616b65207472616e736665725d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3329202020205b417070726f7665207370656e64696e675d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3429202020205b566965772070616972207072696365202620766f6c756d65735d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3529202020205b5377617020746f6b656e735d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3629202020205b50726f76696465206c69717569646974795d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3729202020205b5769746864726177206c69717569646974795d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3829203c2d2d5b4368616e6765204163636f756e745d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 1201882850
			PUSHSLICE x456e74657220796f75722063686f6963653a20
			NEWC
			STSLICE
			ENDC
			PUSHINT 1
			PUSHINT 8
			CALL $NumberInput_no_obj_get$
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
; end function mainMenu
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	mainMenu_internal
.type	mainMenu_internal, @function
; function mainMenu
; expValue
; end expValue
;; get member NONE
PUSHINT 0
; colValue
SETGLOB 17
; end colValue
;; if
;; push identifier userPubkey_
GETGLOB 14
EQINT 0
PUSHCONT {
	PUSHINT 722189255
	PUSHSLICE x456e74657220796f7572207075626c6963206b657920283078666666662e2e2e20666f726d6174293a20
	NEWC
	STSLICE
	ENDC
	FALSE
	CALL $Terminal_no_obj_input$
}
PUSHCONT {
	;; if
	;; push identifier userRoot_
	GETGLOB 15
	;; push identifier ZERO_ADDRESS
	;; address.makeAddrStd()
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SDEQ
	PUSHCONT {
		PUSHINT 1572833486
		PUSHSLICE x456e74657220746f6b656e20726f6f7420616464726573732028303a666666662e2e2e20666f726d6174293a20
		NEWC
		STSLICE
		ENDC
		CALL $AddressInput_no_obj_get$
	}
	PUSHCONT {
		;; if
		;; push identifier userWallet_
		GETGLOB 16
		;; push identifier ZERO_ADDRESS
		;; address.makeAddrStd()
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		SDEQ
		PUSHCONT {
			CALL $resolveWallet_internal$
		}
		PUSHCONT {
			PUSHINT 0
			PUSHSLICE x4d41494e204d454e55
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			NEWC
			NULL
			TUPLE 2
			NEWC
			PUSHSLICE x4b45593a203078
			CALLREF {
				CALL $storeStringInBuilders_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			;; push identifier userPubkey_
			GETGLOB 14
			PUSHINT 0
			FALSE
			TRUE
			FALSE
			CALLREF {
				CALL $convertIntToHexStr_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			CALLREF {
				CALL $assembleList_macro$
			}
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			NEWC
			NULL
			TUPLE 2
			NEWC
			PUSHSLICE x57414c4c45543a20303a
			CALLREF {
				CALL $storeStringInBuilders_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			;; get member value
			;; push identifier userWallet_
			GETGLOB 16
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			PUSHINT 0
			FALSE
			TRUE
			FALSE
			CALLREF {
				CALL $convertIntToHexStr_macro$
			}
			CALLREF {
				CALL $appendToList_macro$
			}
			CALLREF {
				CALL $assembleList_macro$
			}
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x43686f6f736520616374696f6e2e2e2e
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3129202020205b436865636b2042616c616e63655d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3229202020205b4d616b65207472616e736665725d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3329202020205b417070726f7665207370656e64696e675d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3429202020205b566965772070616972207072696365202620766f6c756d65735d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3529202020205b5377617020746f6b656e735d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3629202020205b50726f76696465206c69717569646974795d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3729202020205b5769746864726177206c69717569646974795d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 0
			PUSHSLICE x3829203c2d2d5b4368616e6765204163636f756e745d
			NEWC
			STSLICE
			ENDC
			CALL $Terminal_no_obj_print$
			PUSHINT 1201882850
			PUSHSLICE x456e74657220796f75722063686f6963653a20
			NEWC
			STSLICE
			ENDC
			PUSHINT 1
			PUSHINT 8
			CALL $NumberInput_no_obj_get$
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
; end function mainMenu

.globl	onMainMenu
.public	onMainMenu
.type	onMainMenu, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDIQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 256
}
IFNOT
ENDS
;; param: value
; function onMainMenu
;; if
;; push identifier value
DUP
EQINT 1
PUSHCONT {
	; expValue
	; end expValue
	;; get member TIP3_VIEW_BALANCE
	PUSHINT 1
	; colValue
	SETGLOB 17
	; end colValue
	CALL $tip3BalanceStep1_internal$
}
PUSHCONT {
	;; if
	;; push identifier value
	DUP
	EQINT 2
	PUSHCONT {
		; expValue
		; end expValue
		;; get member TIP3_TRANSFER
		PUSHINT 2
		; colValue
		SETGLOB 17
		; end colValue
		PUSHINT 1468747238
		PUSHSLICE x456e7465722064657374696e6174696f6e2077616c6c65743a20
		NEWC
		STSLICE
		ENDC
		CALL $AddressInput_no_obj_get$
	}
	PUSHCONT {
		;; if
		;; push identifier value
		DUP
		EQINT 3
		PUSHCONT {
			; expValue
			; end expValue
			;; get member TIP3_APPROVE
			PUSHINT 3
			; colValue
			SETGLOB 17
			; end colValue
			PUSHINT 1402047609
			PUSHSLICE x456e746572207370656e6465722077616c6c65743a20
			NEWC
			STSLICE
			ENDC
			CALL $AddressInput_no_obj_get$
		}
		PUSHCONT {
			;; if
			;; push identifier value
			DUP
			EQINT 4
			PUSHCONT {
				; expValue
				; end expValue
				;; get member DEX_VIEW
				PUSHINT 4
				; colValue
				SETGLOB 17
				; end colValue
				CALL $checkSwapToken_internal$
			}
			PUSHCONT {
				;; if
				;; push identifier value
				DUP
				EQINT 5
				PUSHCONT {
					; expValue
					; end expValue
					;; get member DEX_SWAP
					PUSHINT 6
					; colValue
					SETGLOB 17
					; end colValue
					CALL $checkSwapToken_internal$
				}
				PUSHCONT {
					;; if
					;; push identifier value
					DUP
					EQINT 6
					PUSHCONT {
						; expValue
						; end expValue
						;; get member DEX_DEPOSIT
						PUSHINT 5
						; colValue
						SETGLOB 17
						; end colValue
						CALL $checkSwapToken_internal$
					}
					PUSHCONT {
						;; if
						;; push identifier value
						DUP
						EQINT 7
						PUSHCONT {
							; expValue
							; end expValue
							;; get member DEX_WITHDRAW
							PUSHINT 7
							; colValue
							SETGLOB 17
							; end colValue
							CALL $checkSwapToken_internal$
						}
						PUSHCONT {
							;; if
							;; push identifier value
							DUP
							EQINT 8
							PUSHCONT {
								; expValue
								; end expValue
								PUSHINT 0
								; colValue
								SETGLOB 14
								; end colValue
								;; push identifier userRoot_
								GETGLOB 15
								PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
								SDEQ
								DROP
								;; push identifier userWallet_
								GETGLOB 16
								PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
								SDEQ
								DROP
								;; push identifier ctx_action
								GETGLOB 17
								;; ==
								;; get member NONE
								PUSHINT 0
								EQUAL
								DROP
								CALL $mainMenu_internal$
							}
							PUSHCONT {
								;; push identifier ctx_action
								GETGLOB 17
								;; ==
								;; get member NONE
								PUSHINT 0
								EQUAL
								DROP
								CALL $mainMenu_internal$
							}
							IFELSE
							;; end if
						}
						IFELSE
						;; end if
					}
					IFELSE
					;; end if
				}
				IFELSE
				;; end if
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
DROP
; end function onMainMenu
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onMainMenu_internal
.type	onMainMenu_internal, @function
;; param: value
; function onMainMenu
;; if
;; push identifier value
DUP
EQINT 1
PUSHCONT {
	; expValue
	; end expValue
	;; get member TIP3_VIEW_BALANCE
	PUSHINT 1
	; colValue
	SETGLOB 17
	; end colValue
	CALL $tip3BalanceStep1_internal$
}
PUSHCONT {
	;; if
	;; push identifier value
	DUP
	EQINT 2
	PUSHCONT {
		; expValue
		; end expValue
		;; get member TIP3_TRANSFER
		PUSHINT 2
		; colValue
		SETGLOB 17
		; end colValue
		PUSHINT 1468747238
		PUSHSLICE x456e7465722064657374696e6174696f6e2077616c6c65743a20
		NEWC
		STSLICE
		ENDC
		CALL $AddressInput_no_obj_get$
	}
	PUSHCONT {
		;; if
		;; push identifier value
		DUP
		EQINT 3
		PUSHCONT {
			; expValue
			; end expValue
			;; get member TIP3_APPROVE
			PUSHINT 3
			; colValue
			SETGLOB 17
			; end colValue
			PUSHINT 1402047609
			PUSHSLICE x456e746572207370656e6465722077616c6c65743a20
			NEWC
			STSLICE
			ENDC
			CALL $AddressInput_no_obj_get$
		}
		PUSHCONT {
			;; if
			;; push identifier value
			DUP
			EQINT 4
			PUSHCONT {
				; expValue
				; end expValue
				;; get member DEX_VIEW
				PUSHINT 4
				; colValue
				SETGLOB 17
				; end colValue
				CALL $checkSwapToken_internal$
			}
			PUSHCONT {
				;; if
				;; push identifier value
				DUP
				EQINT 5
				PUSHCONT {
					; expValue
					; end expValue
					;; get member DEX_SWAP
					PUSHINT 6
					; colValue
					SETGLOB 17
					; end colValue
					CALL $checkSwapToken_internal$
				}
				PUSHCONT {
					;; if
					;; push identifier value
					DUP
					EQINT 6
					PUSHCONT {
						; expValue
						; end expValue
						;; get member DEX_DEPOSIT
						PUSHINT 5
						; colValue
						SETGLOB 17
						; end colValue
						CALL $checkSwapToken_internal$
					}
					PUSHCONT {
						;; if
						;; push identifier value
						DUP
						EQINT 7
						PUSHCONT {
							; expValue
							; end expValue
							;; get member DEX_WITHDRAW
							PUSHINT 7
							; colValue
							SETGLOB 17
							; end colValue
							CALL $checkSwapToken_internal$
						}
						PUSHCONT {
							;; if
							;; push identifier value
							DUP
							EQINT 8
							PUSHCONT {
								; expValue
								; end expValue
								PUSHINT 0
								; colValue
								SETGLOB 14
								; end colValue
								;; push identifier userRoot_
								GETGLOB 15
								PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
								SDEQ
								DROP
								;; push identifier userWallet_
								GETGLOB 16
								PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
								SDEQ
								DROP
								;; push identifier ctx_action
								GETGLOB 17
								;; ==
								;; get member NONE
								PUSHINT 0
								EQUAL
								DROP
								CALL $mainMenu_internal$
							}
							PUSHCONT {
								;; push identifier ctx_action
								GETGLOB 17
								;; ==
								;; get member NONE
								PUSHINT 0
								EQUAL
								DROP
								CALL $mainMenu_internal$
							}
							IFELSE
							;; end if
						}
						IFELSE
						;; end if
					}
					IFELSE
					;; end if
				}
				IFELSE
				;; end if
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
DROP
; end function onMainMenu

.globl	saveSwapToken
.public	saveSwapToken
.type	saveSwapToken, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function saveSwapToken
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 25
; end colValue
CALL $checkSwapToken_internal$
DROP
; end function saveSwapToken
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	saveSwapToken_internal
.type	saveSwapToken_internal, @function
;; param: value
; function saveSwapToken
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 25
; end colValue
CALL $checkSwapToken_internal$
DROP
; end function saveSwapToken

.globl	checkSwapToken
.public	checkSwapToken
.type	checkSwapToken, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function checkSwapToken
;; if
;; push identifier ctx_swapToken
GETGLOB 25
;; push identifier ZERO_ADDRESS
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SDEQ
PUSHCONT {
	PUSHINT 1838106129
	PUSHSLICE x456e74657220326e6420746f6b656e20726f6f7420616464726573732028303a666666662e2e2e20666f726d6174293a20
	NEWC
	STSLICE
	ENDC
	CALL $AddressInput_no_obj_get$
}
PUSHCONT {
	;; if
	;; push identifier ctx_pool
	GETGLOB 26
	;; push identifier ZERO_ADDRESS
	;; address.makeAddrStd()
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SDEQ
	PUSHCONT {
		CALL $resolvePool_internal$
	}
	PUSHCONT {
		;; if
		;; push identifier ctx_action
		GETGLOB 17
		;; ==
		;; get member DEX_VIEW
		PUSHINT 4
		EQUAL
		PUSHCONT {
			CALL $dexPoolDetailsStep1_internal$
		}
		PUSHCONT {
			;; if
			;; push identifier ctx_action
			GETGLOB 17
			;; ==
			;; get member DEX_SWAP
			PUSHINT 6
			EQUAL
			PUSHCONT {
			}
			PUSHCONT {
				;; if
				;; push identifier ctx_action
				GETGLOB 17
				;; ==
				;; get member DEX_DEPOSIT
				PUSHINT 5
				EQUAL
				PUSHCONT {
				}
				PUSHCONT {
					;; if
					;; push identifier ctx_action
					GETGLOB 17
					;; ==
					;; get member DEX_WITHDRAW
					PUSHINT 7
					EQUAL
					PUSHCONT {
					}
					PUSHCONT {
						CALL $_eraseCtx_internal$
						CALL $mainMenu_internal$
					}
					IFELSE
					;; end if
				}
				IFELSE
				;; end if
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
; end function checkSwapToken
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	checkSwapToken_internal
.type	checkSwapToken_internal, @function
; function checkSwapToken
;; if
;; push identifier ctx_swapToken
GETGLOB 25
;; push identifier ZERO_ADDRESS
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SDEQ
PUSHCONT {
	PUSHINT 1838106129
	PUSHSLICE x456e74657220326e6420746f6b656e20726f6f7420616464726573732028303a666666662e2e2e20666f726d6174293a20
	NEWC
	STSLICE
	ENDC
	CALL $AddressInput_no_obj_get$
}
PUSHCONT {
	;; if
	;; push identifier ctx_pool
	GETGLOB 26
	;; push identifier ZERO_ADDRESS
	;; address.makeAddrStd()
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SDEQ
	PUSHCONT {
		CALL $resolvePool_internal$
	}
	PUSHCONT {
		;; if
		;; push identifier ctx_action
		GETGLOB 17
		;; ==
		;; get member DEX_VIEW
		PUSHINT 4
		EQUAL
		PUSHCONT {
			CALL $dexPoolDetailsStep1_internal$
		}
		PUSHCONT {
			;; if
			;; push identifier ctx_action
			GETGLOB 17
			;; ==
			;; get member DEX_SWAP
			PUSHINT 6
			EQUAL
			PUSHCONT {
			}
			PUSHCONT {
				;; if
				;; push identifier ctx_action
				GETGLOB 17
				;; ==
				;; get member DEX_DEPOSIT
				PUSHINT 5
				EQUAL
				PUSHCONT {
				}
				PUSHCONT {
					;; if
					;; push identifier ctx_action
					GETGLOB 17
					;; ==
					;; get member DEX_WITHDRAW
					PUSHINT 7
					EQUAL
					PUSHCONT {
					}
					PUSHCONT {
						CALL $_eraseCtx_internal$
						CALL $mainMenu_internal$
					}
					IFELSE
					;; end if
				}
				IFELSE
				;; end if
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
; end function checkSwapToken

.globl	resolveWallet
.public	resolveWallet
.type	resolveWallet, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function resolveWallet
;; Remote call ITIP3RootMetadata.getWalletAddress
;; push identifier userRoot_
GETGLOB 15
NEWC
STSLICECONST x497_
PUSHINT 1383672606
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x5b4f57e1
;; workchainId
PUSHINT 0
STIR 8
;; walletPubkey
;; push identifier userPubkey_
GETGLOB 14
STUR 256
NEWC
;; walletOwner
;; push identifier ZERO_ADDRESS
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function resolveWallet
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	resolveWallet_internal
.type	resolveWallet_internal, @function
; function resolveWallet
;; Remote call ITIP3RootMetadata.getWalletAddress
;; push identifier userRoot_
GETGLOB 15
NEWC
STSLICECONST x497_
PUSHINT 1383672606
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x5b4f57e1
;; workchainId
PUSHINT 0
STIR 8
;; walletPubkey
;; push identifier userPubkey_
GETGLOB 14
STUR 256
NEWC
;; walletOwner
;; push identifier ZERO_ADDRESS
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function resolveWallet

.globl	saveWallet
.public	saveWallet
.type	saveWallet, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function saveWallet
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 16
; end colValue
CALL $mainMenu_internal$
DROP
; end function saveWallet
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	saveWallet_internal
.type	saveWallet_internal, @function
;; param: value
; function saveWallet
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 16
; end colValue
CALL $mainMenu_internal$
DROP
; end function saveWallet

.globl	resolvePool
.public	resolvePool
.type	resolvePool, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function resolvePool
;; Remote call IDEXRoot.getPoolAddress
;; push identifier dexAddress
GETGLOB 12
NEWC
STSLICECONST x497_
PUSHINT 1220568222
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x6f7cbcff
;; _tokenA
;; push identifier userRoot_
GETGLOB 15
STSLICER
NEWC
;; _tokenB
;; push identifier ctx_swapToken
GETGLOB 25
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function resolvePool
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	resolvePool_internal
.type	resolvePool_internal, @function
; function resolvePool
;; Remote call IDEXRoot.getPoolAddress
;; push identifier dexAddress
GETGLOB 12
NEWC
STSLICECONST x497_
PUSHINT 1220568222
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x6f7cbcff
;; _tokenA
;; push identifier userRoot_
GETGLOB 15
STSLICER
NEWC
;; _tokenB
;; push identifier ctx_swapToken
GETGLOB 25
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function resolvePool

.globl	savePool
.public	savePool
.type	savePool, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function savePool
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 26
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x436f6e6e656374656420746f204c69717569534f5220506f6f6c3a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; push identifier ctx_pool
GETGLOB 26
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $checkSwapToken_internal$
DROP
; end function savePool
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	savePool_internal
.type	savePool_internal, @function
;; param: value
; function savePool
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 26
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x436f6e6e656374656420746f204c69717569534f5220506f6f6c3a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; push identifier ctx_pool
GETGLOB 26
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $checkSwapToken_internal$
DROP
; end function savePool

.globl	dexPoolDetailsStep1
.public	dexPoolDetailsStep1
.type	dexPoolDetailsStep1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function dexPoolDetailsStep1
;; Remote call IDEXPool.getPoolDetails
;; push identifier ctx_pool
GETGLOB 26
NEWC
STSLICECONST x497_
PUSHINT 1026250647
STUR 32
PUSHINT 523577485
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x6112acbd
ENDC
PUSHINT 0
SENDRAWMSG
; end function dexPoolDetailsStep1
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	dexPoolDetailsStep1_internal
.type	dexPoolDetailsStep1_internal, @function
; function dexPoolDetailsStep1
;; Remote call IDEXPool.getPoolDetails
;; push identifier ctx_pool
GETGLOB 26
NEWC
STSLICECONST x497_
PUSHINT 1026250647
STUR 32
PUSHINT 523577485
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x6112acbd
ENDC
PUSHINT 0
SENDRAWMSG
; end function dexPoolDetailsStep1

.globl	dexPoolDetailsStep2
.public	dexPoolDetailsStep2
.type	dexPoolDetailsStep2, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode details
;; decode struct PoolDetails details
;; decode PoolDetails.rootX
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode PoolDetails.walletX
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode PoolDetails.balanceX
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode PoolDetails.rootY
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode PoolDetails.walletY
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode PoolDetails.balanceY
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode PoolDetails.providerFee
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode PoolDetails.balanceLiq
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct PoolDetails ss:9
BLKSWAP 8, 1
TUPLE 8
SWAP
ENDS
;; param: details
; function dexPoolDetailsStep2
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member rootX
;; push identifier details
PUSH S3
INDEX 0
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member walletX
;; push identifier details
PUSH S3
INDEX 1
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member balanceX
;; push identifier details
PUSH S3
INDEX 2
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member rootY
;; push identifier details
PUSH S3
INDEX 3
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member walletY
;; push identifier details
PUSH S3
INDEX 4
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member balanceY
;; push identifier details
PUSH S3
INDEX 5
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member providerFee
;; push identifier details
PUSH S3
INDEX 6
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member balanceLiq
;; push identifier details
PUSH S3
INDEX 7
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $mainMenu_internal$
DROP
; end function dexPoolDetailsStep2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	dexPoolDetailsStep2_internal
.type	dexPoolDetailsStep2_internal, @function
;; param: details
; function dexPoolDetailsStep2
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member rootX
;; push identifier details
PUSH S3
INDEX 0
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member walletX
;; push identifier details
PUSH S3
INDEX 1
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member balanceX
;; push identifier details
PUSH S3
INDEX 2
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member rootY
;; push identifier details
PUSH S3
INDEX 3
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20303a
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member value
;; get member walletY
;; push identifier details
PUSH S3
INDEX 4
PARSEMSGADDR
INDEX 3
PLDU 256
PUSHINT 0
FALSE
TRUE
FALSE
CALLREF {
	CALL $convertIntToHexStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member balanceY
;; push identifier details
PUSH S3
INDEX 5
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member providerFee
;; push identifier details
PUSH S3
INDEX 6
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; get member balanceLiq
;; push identifier details
PUSH S3
INDEX 7
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $mainMenu_internal$
DROP
; end function dexPoolDetailsStep2

.globl	tip3BalanceStep1
.public	tip3BalanceStep1
.type	tip3BalanceStep1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function tip3BalanceStep1
;; Remote call ITIP3WalletMetadata.getBalance
;; push identifier userWallet_
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 98907555
STUR 32
PUSHINT 523577485
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x26276871
ENDC
PUSHINT 0
SENDRAWMSG
; end function tip3BalanceStep1
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3BalanceStep1_internal
.type	tip3BalanceStep1_internal, @function
; function tip3BalanceStep1
;; Remote call ITIP3WalletMetadata.getBalance
;; push identifier userWallet_
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 98907555
STUR 32
PUSHINT 523577485
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x26276871
ENDC
PUSHINT 0
SENDRAWMSG
; end function tip3BalanceStep1

.globl	tip3BalanceStep2
.public	tip3BalanceStep2
.type	tip3BalanceStep2, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode balance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: balance
; function tip3BalanceStep2
; expValue
; end expValue
;; push identifier balance
DUP
; colValue
SETGLOB 23
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier balance
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
;; Remote call ITIP3WalletFungible.allowance
;; push identifier userWallet_
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 616410710
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x1625a889
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function tip3BalanceStep2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3BalanceStep2_internal
.type	tip3BalanceStep2_internal, @function
;; param: balance
; function tip3BalanceStep2
; expValue
; end expValue
;; push identifier balance
DUP
; colValue
SETGLOB 23
; end colValue
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x42616c616e63653a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier balance
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
;; Remote call ITIP3WalletFungible.allowance
;; push identifier userWallet_
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 616410710
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
PUSHINT 2
STZEROES
;; push identifier pk
GETGLOB 13
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	THROW 64
	STSLICECONST 1
	;; push identifier pk
	GETGLOB 13
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x1625a889
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function tip3BalanceStep2

.globl	tip3BalanceStep3
.public	tip3BalanceStep3
.type	tip3BalanceStep3, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode allowance
;; decode struct AllowanceInfo allowance
;; decode AllowanceInfo.spender_
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode AllowanceInfo.remainingTokens_
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct AllowanceInfo ss:3
ROTREV
TUPLE 2
SWAP
ENDS
;; param: allowance
; function tip3BalanceStep3
; expValue
; end expValue
;; get member remainingTokens_
;; push identifier allowance
DUP
INDEX 1
; colValue
SETGLOB 21
; end colValue
; expValue
; end expValue
;; get member spender_
;; push identifier allowance
DUP
INDEX 0
; colValue
SETGLOB 22
; end colValue
;; if
;; push identifier ctx_action
GETGLOB 17
;; ==
;; get member TIP3_APPROVE
PUSHINT 3
EQUAL
PUSHCONT {
	CALL $tip3ApproveStep3_internal$
}
PUSHCONT {
	PUSHINT 0
	NEWC
	NULL
	TUPLE 2
	NEWC
	PUSHSLICE x416c6c6f77656420746f6b656e733a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	;; push identifier ctx_remainingTokens
	GETGLOB 21
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALL $Terminal_no_obj_print$
	PUSHINT 0
	NEWC
	NULL
	TUPLE 2
	NEWC
	PUSHSLICE x416c6c6f776564207370656e6465723a20303a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	;; get member value
	;; push identifier ctx_spender
	GETGLOB 22
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	PUSHINT 0
	FALSE
	TRUE
	FALSE
	CALLREF {
		CALL $convertIntToHexStr_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALL $Terminal_no_obj_print$
	CALL $mainMenu_internal$
}
IFELSE
;; end if
DROP
; end function tip3BalanceStep3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3BalanceStep3_internal
.type	tip3BalanceStep3_internal, @function
;; param: allowance
; function tip3BalanceStep3
; expValue
; end expValue
;; get member remainingTokens_
;; push identifier allowance
DUP
INDEX 1
; colValue
SETGLOB 21
; end colValue
; expValue
; end expValue
;; get member spender_
;; push identifier allowance
DUP
INDEX 0
; colValue
SETGLOB 22
; end colValue
;; if
;; push identifier ctx_action
GETGLOB 17
;; ==
;; get member TIP3_APPROVE
PUSHINT 3
EQUAL
PUSHCONT {
	CALL $tip3ApproveStep3_internal$
}
PUSHCONT {
	PUSHINT 0
	NEWC
	NULL
	TUPLE 2
	NEWC
	PUSHSLICE x416c6c6f77656420746f6b656e733a20
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	;; push identifier ctx_remainingTokens
	GETGLOB 21
	PUSHINT 0
	FALSE
	FALSE
	CALLREF {
		CALL $convertIntToDecStr_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALL $Terminal_no_obj_print$
	PUSHINT 0
	NEWC
	NULL
	TUPLE 2
	NEWC
	PUSHSLICE x416c6c6f776564207370656e6465723a20303a
	CALLREF {
		CALL $storeStringInBuilders_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	;; get member value
	;; push identifier ctx_spender
	GETGLOB 22
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	PUSHINT 0
	FALSE
	TRUE
	FALSE
	CALLREF {
		CALL $convertIntToHexStr_macro$
	}
	CALLREF {
		CALL $appendToList_macro$
	}
	CALLREF {
		CALL $assembleList_macro$
	}
	CALL $Terminal_no_obj_print$
	CALL $mainMenu_internal$
}
IFELSE
;; end if
DROP
; end function tip3BalanceStep3

.globl	onWalletError
.public	onWalletError
.type	onWalletError, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode errorId
LDU 16
ENDS
;; param: errorId
; function onWalletError
;; if
;; push identifier errorId
DUP
EQINT 64
PUSHCONT {
	PUSHINT 0
	PUSHSLICE x4e6f2077616c6c657420666f722074686973205449502d3320746f6b656e2120446f20796f752077616e7420746f206372656174652069743f
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
	CALL $mainMenu_internal$
}
IF
;; end if
DROP
; end function onWalletError
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onWalletError_internal
.type	onWalletError_internal, @function
;; param: errorId
; function onWalletError
;; if
;; push identifier errorId
DUP
EQINT 64
PUSHCONT {
	PUSHINT 0
	PUSHSLICE x4e6f2077616c6c657420666f722074686973205449502d3320746f6b656e2120446f20796f752077616e7420746f206372656174652069743f
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
	CALL $mainMenu_internal$
}
IF
;; end if
DROP
; end function onWalletError

.globl	tip3TransferStep1
.public	tip3TransferStep1
.type	tip3TransferStep1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function tip3TransferStep1
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 18
; end colValue
PUSHINT 1164929490
PUSHSLICE x486f77206d756368205449503320746f6b656e733a20
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 999999999999999999999
CALL $NumberInput_no_obj_get$
DROP
; end function tip3TransferStep1
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3TransferStep1_internal
.type	tip3TransferStep1_internal, @function
;; param: value
; function tip3TransferStep1
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 18
; end colValue
PUSHINT 1164929490
PUSHSLICE x486f77206d756368205449503320746f6b656e733a20
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 999999999999999999999
CALL $NumberInput_no_obj_get$
DROP
; end function tip3TransferStep1

.globl	tip3TransferStep2
.public	tip3TransferStep2
.type	tip3TransferStep2, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: value
; function tip3TransferStep2
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 19
; end colValue
PUSHINT 1450606279
PUSHSLICE x486f77206d75636820544f4e732061732076616c75653a20
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 999999999999999999999
CALL $NumberInput_no_obj_get$
DROP
; end function tip3TransferStep2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3TransferStep2_internal
.type	tip3TransferStep2_internal, @function
;; param: value
; function tip3TransferStep2
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 19
; end colValue
PUSHINT 1450606279
PUSHSLICE x486f77206d75636820544f4e732061732076616c75653a20
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 999999999999999999999
CALL $NumberInput_no_obj_get$
DROP
; end function tip3TransferStep2

.globl	tip3TransferStep3
.public	tip3TransferStep3
.type	tip3TransferStep3, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: value
; function tip3TransferStep3
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 20
; end colValue
;; Remote call ITIP3WalletFungible.transfer
;; push identifier userWallet_
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 0
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier userPubkey_
GETGLOB 14
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier userPubkey_
	GETGLOB 14
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x7b017417
NEWC
;; dest
;; push identifier ctx_dest
GETGLOB 18
STSLICER
;; tokens
;; push identifier ctx_tokens
GETGLOB 19
STUR 128
;; grams
;; push identifier ctx_grams
GETGLOB 20
STUR 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALL $_eraseCtx_internal$
CALL $tip3BalanceStep1_internal$
DROP
; end function tip3TransferStep3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3TransferStep3_internal
.type	tip3TransferStep3_internal, @function
;; param: value
; function tip3TransferStep3
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 20
; end colValue
;; Remote call ITIP3WalletFungible.transfer
;; push identifier userWallet_
GETGLOB 16
NEWC
STSLICECONST x497_
PUSHINT 0
STUR 32
PUSHINT 0
STUR 32
PUSHINT 2
STUR 8
STONE
STONE
STONE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 4
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier userPubkey_
GETGLOB 14
ISNULL
PUSHCONT {
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	;; push identifier userPubkey_
	GETGLOB 14
	STUR 256
}
IFELSE
;; push identifier now
NOW
;; uint64
STUR 64
PUSHINT 0
STUR 32
STSLICECONST x7b017417
NEWC
;; dest
;; push identifier ctx_dest
GETGLOB 18
STSLICER
;; tokens
;; push identifier ctx_tokens
GETGLOB 19
STUR 128
;; grams
;; push identifier ctx_grams
GETGLOB 20
STUR 128
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
CALL $_eraseCtx_internal$
CALL $tip3BalanceStep1_internal$
DROP
; end function tip3TransferStep3

.globl	tip3ApproveStep1
.public	tip3ApproveStep1
.type	tip3ApproveStep1, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
; function tip3ApproveStep1
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 18
; end colValue
PUSHINT 853404753
PUSHSLICE x486f77206d756368205449503320746f6b656e733a20
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 999999999999999999999
CALL $NumberInput_no_obj_get$
DROP
; end function tip3ApproveStep1
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3ApproveStep1_internal
.type	tip3ApproveStep1_internal, @function
;; param: value
; function tip3ApproveStep1
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 18
; end colValue
PUSHINT 853404753
PUSHSLICE x486f77206d756368205449503320746f6b656e733a20
NEWC
STSLICE
ENDC
PUSHINT 0
PUSHINT 999999999999999999999
CALL $NumberInput_no_obj_get$
DROP
; end function tip3ApproveStep1

.globl	tip3ApproveStep2
.public	tip3ApproveStep2
.type	tip3ApproveStep2, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode value
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: value
; function tip3ApproveStep2
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 19
; end colValue
CALL $tip3BalanceStep1_internal$
DROP
; end function tip3ApproveStep2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3ApproveStep2_internal
.type	tip3ApproveStep2_internal, @function
;; param: value
; function tip3ApproveStep2
; expValue
; end expValue
;; push identifier value
DUP
; colValue
SETGLOB 19
; end colValue
CALL $tip3BalanceStep1_internal$
DROP
; end function tip3ApproveStep2

.globl	tip3ApproveStep3
.public	tip3ApproveStep3
.type	tip3ApproveStep3, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function tip3ApproveStep3
;; if
;; push identifier ctx_balance
GETGLOB 23
;; >=
;; push identifier ctx_tokens
GETGLOB 19
GEQ
PUSHCONT {
	;; Remote call ITIP3WalletFungible.approve
	;; push identifier userWallet_
	GETGLOB 16
	NEWC
	STSLICECONST x497_
	PUSHINT 0
	STUR 32
	PUSHINT 1585501079
	STUR 32
	PUSHINT 2
	STUR 8
	STONE
	STONE
	STONE
	NEWC
	STSLICECONST xa_
	STB
	STSLICE
	PUSHINT 4
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST 1
	PUSHINT 512
	STZEROES
	;; push identifier userPubkey_
	GETGLOB 14
	ISNULL
	PUSHCONT {
		STSLICECONST 0
	}
	PUSHCONT {
		STSLICECONST 1
		;; push identifier userPubkey_
		GETGLOB 14
		STUR 256
	}
	IFELSE
	;; push identifier now
	NOW
	;; uint64
	STUR 64
	PUSHINT 0
	STUR 32
	STSLICECONST x0321d173
	NEWC
	;; spender
	;; push identifier ctx_dest
	GETGLOB 18
	STSLICER
	;; remainingTokens
	;; push identifier ctx_remainingTokens
	GETGLOB 21
	STUR 128
	;; tokens
	;; push identifier ctx_tokens
	GETGLOB 19
	STUR 128
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	PUSHINT 0
	PUSHSLICE x4e6f7420656e6f7567682062616c616e636521
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
CALL $_eraseCtx_internal$
CALL $tip3BalanceStep1_internal$
; end function tip3ApproveStep3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	tip3ApproveStep3_internal
.type	tip3ApproveStep3_internal, @function
; function tip3ApproveStep3
;; if
;; push identifier ctx_balance
GETGLOB 23
;; >=
;; push identifier ctx_tokens
GETGLOB 19
GEQ
PUSHCONT {
	;; Remote call ITIP3WalletFungible.approve
	;; push identifier userWallet_
	GETGLOB 16
	NEWC
	STSLICECONST x497_
	PUSHINT 0
	STUR 32
	PUSHINT 1585501079
	STUR 32
	PUSHINT 2
	STUR 8
	STONE
	STONE
	STONE
	NEWC
	STSLICECONST xa_
	STB
	STSLICE
	PUSHINT 4
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST 1
	PUSHINT 512
	STZEROES
	;; push identifier userPubkey_
	GETGLOB 14
	ISNULL
	PUSHCONT {
		STSLICECONST 0
	}
	PUSHCONT {
		STSLICECONST 1
		;; push identifier userPubkey_
		GETGLOB 14
		STUR 256
	}
	IFELSE
	;; push identifier now
	NOW
	;; uint64
	STUR 64
	PUSHINT 0
	STUR 32
	STSLICECONST x0321d173
	NEWC
	;; spender
	;; push identifier ctx_dest
	GETGLOB 18
	STSLICER
	;; remainingTokens
	;; push identifier ctx_remainingTokens
	GETGLOB 21
	STUR 128
	;; tokens
	;; push identifier ctx_tokens
	GETGLOB 19
	STUR 128
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	PUSHINT 0
	PUSHSLICE x4e6f7420656e6f7567682062616c616e636521
	NEWC
	STSLICE
	ENDC
	CALL $Terminal_no_obj_print$
}
IFELSE
;; end if
CALL $_eraseCtx_internal$
CALL $tip3BalanceStep1_internal$
; end function tip3ApproveStep3

.globl	onError
.public	onError
.type	onError, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode errorId
LDU 16
ENDS
;; param: errorId
; function onError
CALL $_eraseCtx_internal$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x4572726f723a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier errorId
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $mainMenu_internal$
DROP
; end function onError
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onError_internal
.type	onError_internal, @function
;; param: errorId
; function onError
CALL $_eraseCtx_internal$
PUSHINT 0
NEWC
NULL
TUPLE 2
NEWC
PUSHSLICE x4572726f723a20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
;; push identifier errorId
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
CALLREF {
	CALL $appendToList_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALL $Terminal_no_obj_print$
CALL $mainMenu_internal$
DROP
; end function onError

.globl	_eraseCtx_internal
.type	_eraseCtx_internal, @function
; function _eraseCtx
; expValue
; end expValue
;; get member NONE
PUSHINT 0
; colValue
SETGLOB 17
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 18
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 19
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 20
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 21
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 22
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 23
; end colValue
; expValue
; end expValue
PUSHINT 0
; colValue
SETGLOB 24
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 25
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 26
; end colValue
; end function _eraseCtx

.globl	getDebotOptions
.public	getDebotOptions
.type	getDebotOptions, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
NEWC
ENDC
; colValue
POP S2
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfdecd0db
	PUSH S4
	STUR 8
	PUSH S3
	STREFR
	PUSH S2
	STREFR
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 4
; end function getDebotOptions
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotOptions_internal
.type	getDebotOptions_internal, @function
; function getDebotOptions
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
NEWC
ENDC
;; ret param: targetAbi
NEWC
ENDC
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	NEWC
	ENDC
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
NEWC
ENDC
; colValue
POP S2
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
;; returning named params
; end function getDebotOptions

.globl	setABI
.public	setABI
.type	setABI, @function
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode dabi
LDREF
ENDS
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
DROP
; end function setABI
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setABI_internal
.type	setABI_internal, @function
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
PUSHINT 1
; expValue
;; fetch m_options
GETGLOB 10
; end expValue
SWAP
OR
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier dabi
DUP
; colValue
SETGLOB 11
; end colValue
DROP
; end function setABI

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
NEWC
GETGLOB 25
GETGLOB 26
XCHG s2
STSLICE
STSLICE
GETGLOB 15
GETGLOB 16
GETGLOB 18
GETGLOB 27
REVERSE 6, 0
STBREF
STSLICE
STSLICE
STSLICE
SWAP
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 128
NIP
NIP
STBREFR
NEWC
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
REVERSE 7, 0
STU 128
STU 128
STU 128
STSLICE
STU 128
STU 128
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 17
REVERSE 9, 0
STBREF
STBREF
STU 8
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
STSLICE
SWAP
DUP
ISNULL
NOT
PUSHCONT {
	NEWC
	STU 256
	SWAP
	STSLICECONST 1
	STBREF
}
PUSHCONT {
	DROP
	STSLICECONST 0
}
IFELSE
STU 256
STU 8
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDREFRTOS
LDMSGADDR
SETGLOB 26
SETGLOB 25
LDMSGADDR
LDMSGADDR
LDMSGADDR
LDREFRTOS
NIP
LDMSGADDR
PLDU 128
TUPLE 2
SETGLOB 27
SETGLOB 18
SETGLOB 16
SETGLOB 15
LDREFRTOS
LDU 128
LDU 128
LDU 128
LDMSGADDR
LDU 128
PLDU 128
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
LDU 8
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SETGLOB 11
LDMSGADDR
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDU 256
}
IFNOT
SETGLOB 13
LDU 256
PLDU 8
SETGLOB 17
SETGLOB 14
SETGLOB 12
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDREFRTOS
	LDMSGADDR
	SETGLOB 26
	SETGLOB 25
	LDMSGADDR
	LDMSGADDR
	LDMSGADDR
	LDREFRTOS
	NIP
	LDMSGADDR
	PLDU 128
	TUPLE 2
	SETGLOB 27
	SETGLOB 18
	SETGLOB 16
	SETGLOB 15
	LDREFRTOS
	LDU 128
	LDU 128
	LDU 128
	LDMSGADDR
	LDU 128
	PLDU 128
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	LDU 8
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDREF
	}
	IFNOT
	SETGLOB 11
	LDMSGADDR
	LDOPTREF
	SWAP
	DUP
	ISNULL
	PUSHCONT {
		CTOS
		PLDU 256
	}
	IFNOT
	SETGLOB 13
	LDU 256
	PLDU 8
	SETGLOB 17
	SETGLOB 14
	SETGLOB 12
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init m_options
	PUSHINT 0
	SETGLOB 10
	; init m_debotAbi
	NULL
	SETGLOB 11
	; init dexAddress
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 12
	; init pk
	NULL
	SETGLOB 13
	; init userPubkey_
	PUSHINT 0
	SETGLOB 14
	; init userRoot_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init userWallet_
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init ctx_action
	PUSHINT 0
	SETGLOB 17
	; init ctx_dest
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 18
	; init ctx_tokens
	PUSHINT 0
	SETGLOB 19
	; init ctx_grams
	PUSHINT 0
	SETGLOB 20
	; init ctx_remainingTokens
	PUSHINT 0
	SETGLOB 21
	; init ctx_spender
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 22
	; init ctx_balance
	PUSHINT 0
	SETGLOB 23
	; init ctx_limit
	PUSHINT 0
	SETGLOB 24
	; init ctx_swapToken
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 25
	; init ctx_pool
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 26
	; init walletAllowance
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 2
	SETGLOB 27
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.globl	AddressInput_with_obj_get
.type	AddressInput_with_obj_get, @function
;; param: answerId
;; param: prompt
; function get
;; address.makeAddrStd()
PUSHSLICE x9c3afda37b1cc4610e222de8a45cb1be15278aa418ade95bc47de7b12335308ca77_
;; decl: addr
;; Remote call IAddressInput.get
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x210da005
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; prompt
;; push identifier prompt
PUSH S2
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP2
; end function get

.globl	AddressInput_no_obj_get
.type	AddressInput_no_obj_get, @function
;; param: answerId
;; param: prompt
; function get
;; address.makeAddrStd()
PUSHSLICE x9c3afda37b1cc4610e222de8a45cb1be15278aa418ade95bc47de7b12335308ca77_
;; decl: addr
;; Remote call IAddressInput.get
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x210da005
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; prompt
;; push identifier prompt
PUSH S2
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 3
; end function get

.globl	NumberInput_with_obj_get
.type	NumberInput_with_obj_get, @function
;; param: answerId
;; param: prompt
;; param: min
;; param: max
; function get
;; address.makeAddrStd()
PUSHSLICE x9c38b52ab164cc95dafb87cc24686daa89e27ffcd3561c4b2825e918da390b10803_
;; decl: addr
;; Remote call INumberInput.get
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x40f7a1ce
;; answerId
;; push identifier answerId
PUSH S5
STUR 32
;; prompt
;; push identifier prompt
PUSH S4
STREFR
;; min
;; push identifier min
PUSH S3
STIR 256
;; max
;; push identifier max
PUSH S2
STIR 256
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 4
; end function get

.globl	NumberInput_no_obj_get
.type	NumberInput_no_obj_get, @function
;; param: answerId
;; param: prompt
;; param: min
;; param: max
; function get
;; address.makeAddrStd()
PUSHSLICE x9c38b52ab164cc95dafb87cc24686daa89e27ffcd3561c4b2825e918da390b10803_
;; decl: addr
;; Remote call INumberInput.get
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x40f7a1ce
;; answerId
;; push identifier answerId
PUSH S5
STUR 32
;; prompt
;; push identifier prompt
PUSH S4
STREFR
;; min
;; push identifier min
PUSH S3
STIR 256
;; max
;; push identifier max
PUSH S2
STIR 256
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 5
; end function get

.globl	Terminal_with_obj_input
.type	Terminal_with_obj_input, @function
;; param: answerId
;; param: prompt
;; param: multiline
; function input
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.input
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x3955f72f
;; answerId
;; push identifier answerId
PUSH S4
STUR 32
;; prompt
;; push identifier prompt
PUSH S3
STREFR
;; multiline
;; push identifier multiline
PUSH S2
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 3
; end function input

.globl	Terminal_no_obj_input
.type	Terminal_no_obj_input, @function
;; param: answerId
;; param: prompt
;; param: multiline
; function input
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.input
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x3955f72f
;; answerId
;; push identifier answerId
PUSH S4
STUR 32
;; prompt
;; push identifier prompt
PUSH S3
STREFR
;; multiline
;; push identifier multiline
PUSH S2
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 4
; end function input

.globl	Terminal_with_obj_print
.type	Terminal_with_obj_print, @function
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0ce649c2
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; message
;; push identifier message
PUSH S2
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
DROP2
; end function print

.globl	Terminal_no_obj_print
.type	Terminal_no_obj_print, @function
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier addr
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0ce649c2
;; answerId
;; push identifier answerId
PUSH S3
STUR 32
;; message
;; push identifier message
PUSH S2
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
BLKDROP 3
; end function print

