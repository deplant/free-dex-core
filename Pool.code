.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _tokenA
;; decode struct Tip3 _tokenA
;; decode Tip3.name
LDREF
;; decode Tip3.symbol
LDREF
;; decode Tip3.decimals
LDU 8
;; decode Tip3.rootAddr
LDMSGADDR
;; decode Tip3.rootKey
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode Tip3.ttwCode
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode Tip3.balance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct Tip3 ss:8
BLKSWAP 7, 1
TUPLE 7
SWAP
; Decode _tokenB
;; decode struct Tip3 _tokenB
;; decode Tip3.name
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode Tip3.symbol
LDREF
;; decode Tip3.decimals
LDU 8
;; decode Tip3.rootAddr
LDMSGADDR
;; decode Tip3.rootKey
LDU 256
;; decode Tip3.ttwCode
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode Tip3.balance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct Tip3 ss:9
BLKSWAP 7, 1
TUPLE 7
SWAP
ENDS
;; param: _tokenA
;; param: _tokenB
; modifier vaultOnly
;; get member sender
GETGLOB 9
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SDEQ
NOT
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; get member sender
	GETGLOB 9
	;; push identifier vaultAddr
	GETGLOB 12
	SDEQ
}
IF
THROWIFNOT 100
; constructor Pool
; expValue
; end expValue
;; push identifier _tokenA
PUSH S1
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier _tokenB
DUP
; colValue
SETGLOB 11
; end colValue
; end constructor Pool
DROP2
; end modifier vaultOnly
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	_expectedAddress_internal
.type	_expectedAddress_internal, @function
;; param: _walletPubkey
;; param: _token
; function _expectedAddress
;; get member rootAddr
;; push identifier tokenA
GETGLOB 10
INDEX 3
;; push identifier _token
PUSH S1
SDEQ
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; get member rootAddr
	;; push identifier tokenB
	GETGLOB 11
	INDEX 3
	;; push identifier _token
	PUSH S1
	SDEQ
}
IFNOT
THROWIFNOT 151
NEWC
ENDC
;; decl: signedCode
;; if
;; get member rootAddr
;; push identifier tokenA
GETGLOB 10
INDEX 3
;; push identifier _token
PUSH S2
SDEQ
PUSHCONT {
	;; get member ttwCode
	;; push identifier tokenA
	GETGLOB 10
	INDEX 5
	;; push identifier _walletPubkey
	PUSH S3
	CALL $insert_pubkey_macro$
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	;; get member ttwCode
	;; push identifier tokenB
	GETGLOB 11
	INDEX 5
	;; push identifier _walletPubkey
	PUSH S3
	CALL $insert_pubkey_macro$
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
;; push identifier signedCode
PUSH S1
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
;; return
;; push identifier stateInit
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
XCHG s4
BLKDROP 4
; end function _expectedAddress

.globl	provide
.public	provide
.type	provide, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function provide
; end function provide
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	provide_internal
.type	provide_internal, @function
; function provide
; end function provide

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
REVERSE 5, 0
SWAP
UNTUPLE 7
NEWC
PUSH S7
STREFR
PUSH S6
STREFR
PUSH S5
STUR 8
PUSH S4
STSLICER
PUSH S3
STUR 256
PUSH S2
STREFR
PUSH S1
STUR 128
XCHG s7
BLKDROP 7
STBREFR
SWAP
UNTUPLE 7
NEWC
PUSH S7
STREFR
PUSH S6
STREFR
PUSH S5
STUR 8
PUSH S4
STSLICER
PUSH S3
STUR 256
PUSH S2
STREFR
PUSH S1
STUR 128
XCHG s7
BLKDROP 7
STBREFR
STSLICE
STI 1
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDREF
LDREF
LDU 8
LDMSGADDR
LDU 256
LDREF
PLDU 128
TUPLE 7
SETGLOB 10
LDREFRTOS
LDREF
LDREF
LDU 8
LDMSGADDR
LDU 256
LDREF
PLDU 128
TUPLE 7
SETGLOB 11
LDMSGADDR
PLDI 1
SETGLOB 13
SETGLOB 12
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDREF
	LDREF
	LDU 8
	LDMSGADDR
	LDU 256
	LDREF
	PLDU 128
	TUPLE 7
	SETGLOB 10
	LDREFRTOS
	LDREF
	LDREF
	LDU 8
	LDMSGADDR
	LDU 256
	LDREF
	PLDU 128
	TUPLE 7
	SETGLOB 11
	LDMSGADDR
	PLDI 1
	SETGLOB 13
	SETGLOB 12
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init tokenA
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	NEWC
	ENDC
	PUSHINT 0
	TUPLE 7
	SETGLOB 10
	; init tokenB
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	NEWC
	ENDC
	PUSHINT 0
	TUPLE 7
	SETGLOB 11
	; init vaultAddr
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 12
	; init closed
	PUSHINT 0
	SETGLOB 13
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 1
SETINDEXQ 4
SETGLOB 4
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.globl	vaultAddr
.public	vaultAddr
.type	vaultAddr, @function
CALL $c4_to_c7$
GETGLOB 12
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xdba74b48
PUSH S1
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
TRUE
SETGLOB 7

